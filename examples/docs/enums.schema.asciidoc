---
template: reference
foo: bar
---

= Enumerated Schema

....
https://example.com/schemas/enums
....

This is an example schema with examples for properties with enum values

|===
|link:../abstract.asciidoc[Abstract] |Extensible |link:../status.asciidoc[Status] |Identifiable |Custom Properties |Additional Properties |Defined In

|Can be instantiated
|No
|Experimental
|No
|Forbidden
|Permitted
|link:enums.schema.json[enums.schema.json]
|===

= Enumerated Properties

|===
|Property |Type |Required |Nullable |Defined by

|xref:_hello[hello]
|`enum`
|*Required*
|No
|Enumerated (this schema)

|xref:_nested[nested]
|`object`
|Optional
|No
|Enumerated (this schema)

|`*`
|any
|Additional
|Yes
|this schema _allows_ additional properties
|===

== hello

A simple string. Pick a value.

`hello`

* is *required*
* type: `enum`
* defined in this schema

The value of this property *must* be equal to one of the xref:_hello_known_values[known values below].

=== hello Known Values

|===
|Value |Description

|`World`
|

|`Welt`
|
|===

== nested

=== Enumerated (Nested)

This is an example schema with examples for properties of nested objects with enum values

`nested`

* is optional
* type: `object`
* defined in this schema

=== nested Type

`object` with following properties:

|===
|Property |Type |Required

|`test`
|string
|Optional
|===

==== test

A simple string. Pick a value.

`test`

* is optional
* type: `enum`

The value of this property *must* be equal to one of the xref:_nested_known_values[known values below].

===== test Known Values

|===
|Value |Description

|`nested`
|

|`object`
|

|`works`
|
|===
